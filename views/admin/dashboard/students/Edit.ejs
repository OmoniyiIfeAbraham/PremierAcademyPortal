<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Edit Student - Admin Portal</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        padding: 20px;
        line-height: 1.6;
      }

      .container {
        max-width: 500px;
        margin: 0 auto;
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 20px;
        padding: 40px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
      }

      .header {
        text-align: center;
        margin-bottom: 30px;
      }

      .header h1 {
        color: #2d3748;
        font-size: 28px;
        font-weight: 600;
        margin-bottom: 8px;
      }

      .header p {
        color: #718096;
        font-size: 14px;
        font-weight: 400;
      }

      .message {
        padding: 12px 16px;
        margin-bottom: 24px;
        border-radius: 8px;
        font-size: 14px;
        font-weight: 500;
      }

      .message.success {
        background: rgba(72, 187, 120, 0.1);
        color: #38a169;
        border: 1px solid rgba(72, 187, 120, 0.2);
      }

      .message.error {
        background: rgba(245, 101, 101, 0.1);
        color: #e53e3e;
        border: 1px solid rgba(245, 101, 101, 0.2);
      }

      .message.info {
        background: rgba(66, 153, 225, 0.1);
        color: #3182ce;
        border: 1px solid rgba(66, 153, 225, 0.2);
      }

      .form-group {
        margin-bottom: 24px;
      }

      .form-group label {
        display: block;
        margin-bottom: 8px;
        color: #2d3748;
        font-weight: 500;
        font-size: 14px;
      }

      .form-control {
        width: 100%;
        padding: 12px 16px;
        border: 2px solid #e2e8f0;
        border-radius: 10px;
        font-size: 16px;
        transition: all 0.3s ease;
        background: #ffffff;
        color: #2d3748;
      }

      .form-control:focus {
        outline: none;
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        transform: translateY(-1px);
      }

      .form-control::placeholder {
        color: #a0aec0;
      }

      select.form-control {
        cursor: pointer;
        appearance: none;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
        background-position: right 12px center;
        background-repeat: no-repeat;
        background-size: 16px;
        padding-right: 40px;
      }

      select.form-control:focus {
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%23667eea' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
      }

      .btn {
        width: 100%;
        padding: 14px 24px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        border-radius: 10px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        position: relative;
        overflow: hidden;
      }

      .btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
        transition: left 0.5s ease;
      }

      .btn:hover::before {
        left: 100%;
      }

      .btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 20px rgba(102, 126, 234, 0.3);
      }

      .btn:active {
        transform: translateY(0);
      }

      .form-row {
        display: flex;
        gap: 16px;
        align-items: flex-end;
      }

      .form-row .form-group {
        flex: 1;
        margin-bottom: 0;
      }

      .breadcrumb {
        display: flex;
        align-items: center;
        gap: 8px;
        margin-bottom: 24px;
        font-size: 14px;
        color: #718096;
      }

      .breadcrumb a {
        color: #667eea;
        text-decoration: none;
        transition: color 0.3s ease;
      }

      .breadcrumb a:hover {
        color: #764ba2;
      }

      .breadcrumb-separator {
        color: #cbd5e0;
      }

      .input-icon {
        position: relative;
      }

      .input-icon .form-control {
        padding-left: 44px;
      }

      .input-icon .icon {
        position: absolute;
        left: 14px;
        top: 50%;
        transform: translateY(-50%);
        color: #a0aec0;
        font-size: 16px;
      }

      .required {
        color: #e53e3e;
        margin-left: 2px;
      }

      @media (max-width: 640px) {
        .container {
          margin: 20px 10px;
          padding: 30px 20px;
        }
        
        .header h1 {
          font-size: 24px;
        }
        
        .form-row {
          flex-direction: column;
          gap: 0;
        }
        
        .form-row .form-group {
          margin-bottom: 24px;
        }
      }

      .loading {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(255, 255, 255, 0.9);
        z-index: 1000;
      }

      .loading.active {
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .spinner {
        width: 40px;
        height: 40px;
        border: 4px solid #e2e8f0;
        border-top: 4px solid #667eea;
        border-radius: 50%;
        animation: spin 1s linear infinite;
      }

      @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
      }

      .form-actions {
        display: flex;
        gap: 12px;
        margin-top: 32px;
      }

      .btn-secondary {
        background: #e2e8f0;
        color: #4a5568;
      }

      .btn-secondary:hover {
        background: #cbd5e0;
        transform: translateY(-2px);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
      }

      .animation-fade-in {
        animation: fadeIn 0.5s ease-in-out;
      }

      @keyframes fadeIn {
        from {
          opacity: 0;
          transform: translateY(20px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }
    </style>
  </head>
  <body>
    <div class="loading" id="loading">
      <div class="spinner"></div>
    </div>

    <div class="container animation-fade-in">
      <nav class="breadcrumb">
        <a href="/portal/admin/dashboard">Dashboard</a>
        <span class="breadcrumb-separator">â€º</span>
        <a href="/portal/admin/dashboard/students">Students</a>
        <span class="breadcrumb-separator">â€º</span>
        <span>Edit Student</span>
      </nav>

      <div class="header">
        <h1>Edit Student</h1>
        <p>Update student information and class assignment</p>
      </div>

      <% if (msg && msg.trim() !== '') { %>
      <div class="message <%= msg.includes('success') || msg.includes('updated') ? 'success' : msg.includes('error') || msg.includes('failed') ? 'error' : 'info' %>">
        <%= msg %>
      </div>
      <% } %>

      <form action="/portal/admin/dashboard/students/edit/<%= student._id %>" method="post" id="editForm">
        <div class="form-group">
          <label for="name">Full Name <span class="required">*</span></label>
          <div class="input-icon">
            <span class="icon">ðŸ‘¤</span>
            <input
              type="text"
              name="name"
              id="name"
              class="form-control"
              placeholder="Enter student's full name"
              required
              value="<%= student.name %>"
            />
          </div>
        </div>

        <% if (classes.length > 0) { %>
        <div class="form-group">
          <label for="classes">Class Assignment <span class="required">*</span></label>
          <select name="class" id="classes" class="form-control" required>
            <option value="" disabled>Select a class</option>
            <% classes.forEach(clas => { %>
              <option value="<%= clas._id %>" <%= clas._id.toString() === student.class.toString() ? 'selected' : '' %>>
                <%= clas.name %>
              </option>
            <% }) %>
          </select>
        </div>
        <% } %>

        <div class="form-actions">
          <button type="button" class="btn btn-secondary" onclick="window.history.back()">
            Cancel
          </button>
          <button type="submit" class="btn">
            Update Student
          </button>
        </div>
      </form>
    </div>

    <script>
      document.getElementById('editForm').addEventListener('submit', function(e) {
        const loading = document.getElementById('loading');
        loading.classList.add('active');
        
        // Optional: Add client-side validation
        const name = document.getElementById('name').value.trim();
        const classSelect = document.getElementById('classes');
        
        if (!name) {
          e.preventDefault();
          alert('Please enter the student\'s full name');
          loading.classList.remove('active');
          return;
        }
        
        if (classSelect && !classSelect.value) {
          e.preventDefault();
          alert('Please select a class');
          loading.classList.remove('active');
          return;
        }
      });

      // Auto-hide success messages after 5 seconds
      const messages = document.querySelectorAll('.message.success');
      messages.forEach(msg => {
        setTimeout(() => {
          msg.style.transition = 'opacity 0.3s ease';
          msg.style.opacity = '0';
          setTimeout(() => msg.remove(), 300);
        }, 5000);
      });

      // Add form validation feedback
      const inputs = document.querySelectorAll('.form-control');
      inputs.forEach(input => {
        input.addEventListener('blur', function() {
          if (this.hasAttribute('required') && !this.value.trim()) {
            this.style.borderColor = '#e53e3e';
          } else {
            this.style.borderColor = '#e2e8f0';
          }
        });
      });
    </script>
  </body>
</html>