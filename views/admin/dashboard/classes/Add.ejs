<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Add Class - Admin Dashboard</title>
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: "Inter", -apple-system, BlinkMacSystemFont, "Segoe UI",
          Roboto, sans-serif;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        padding: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .container {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(15px);
        border-radius: 20px;
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
        padding: 40px;
        width: 100%;
        max-width: 600px;
        border: 1px solid rgba(255, 255, 255, 0.2);
        position: relative;
        overflow: hidden;
      }

      .container::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, #667eea, #764ba2);
      }

      .header {
        text-align: center;
        margin-bottom: 30px;
      }

      .header h1 {
        color: #1f2937;
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 10px;
        background: linear-gradient(135deg, #667eea, #764ba2);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
      }

      .header p {
        color: #6b7280;
        font-size: 1rem;
      }

      .message {
        margin-bottom: 25px;
        padding: 15px 20px;
        border-radius: 12px;
        font-size: 0.95rem;
        text-align: center;
        transition: all 0.3s ease;
      }

      .message.error {
        background: #fef2f2;
        color: #dc2626;
        border: 1px solid #fecaca;
      }

      .message.success {
        background: #f0fdf4;
        color: #16a34a;
        border: 1px solid #bbf7d0;
      }

      .form-section {
        margin-bottom: 30px;
      }

      .section-title {
        font-size: 1.2rem;
        font-weight: 600;
        color: #374151;
        margin-bottom: 15px;
        display: flex;
        align-items: center;
        gap: 10px;
      }

      .section-icon {
        width: 24px;
        height: 24px;
        background: linear-gradient(135deg, #667eea, #764ba2);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 0.8rem;
      }

      .form-group {
        margin-bottom: 20px;
      }

      .form-label {
        display: block;
        margin-bottom: 8px;
        color: #374151;
        font-weight: 500;
        font-size: 0.9rem;
      }

      .form-input {
        width: 100%;
        padding: 14px 16px;
        border: 2px solid #e5e7eb;
        border-radius: 12px;
        font-size: 1rem;
        transition: all 0.3s ease;
        background: #ffffff;
        outline: none;
      }

      .form-input:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        transform: translateY(-1px);
      }

      .form-input::placeholder {
        color: #9ca3af;
      }

      .form-select {
        width: 100%;
        padding: 14px 16px;
        border: 2px solid #e5e7eb;
        border-radius: 12px;
        font-size: 1rem;
        transition: all 0.3s ease;
        background: #ffffff;
        outline: none;
        cursor: pointer;
      }

      .form-select:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
      }

      .checkbox-group {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 12px;
        margin-top: 10px;
      }

      .checkbox-item {
        display: flex;
        align-items: center;
        padding: 12px 16px;
        background: #f8fafc;
        border: 2px solid #e2e8f0;
        border-radius: 10px;
        transition: all 0.3s ease;
        cursor: pointer;
        position: relative;
      }

      .checkbox-item:hover {
        background: #f1f5f9;
        border-color: #cbd5e1;
      }

      .checkbox-item.checked {
        background: rgba(102, 126, 234, 0.1);
        border-color: #667eea;
      }

      .checkbox-item input[type="checkbox"] {
        width: 20px;
        height: 20px;
        margin-right: 12px;
        cursor: pointer;
        accent-color: #667eea;
      }

      .checkbox-item label {
        font-weight: 500;
        color: #374151;
        cursor: pointer;
        flex: 1;
      }

      .no-subjects {
        text-align: center;
        padding: 30px;
        color: #6b7280;
        font-style: italic;
        background: #f9fafb;
        border-radius: 12px;
        border: 2px dashed #d1d5db;
      }

      .submit-button {
        width: 100%;
        padding: 16px;
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        border: none;
        border-radius: 12px;
        font-size: 1.1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
        margin-top: 20px;
      }

      .submit-button::before {
        content: "";
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(
          90deg,
          transparent,
          rgba(255, 255, 255, 0.2),
          transparent
        );
        transition: left 0.5s;
      }

      .submit-button:hover::before {
        left: 100%;
      }

      .submit-button:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 25px rgba(102, 126, 234, 0.4);
      }

      .submit-button:active {
        transform: translateY(0);
      }

      .form-divider {
        height: 1px;
        background: linear-gradient(90deg, transparent, #e5e7eb, transparent);
        margin: 25px 0;
      }

      @media (max-width: 768px) {
        .container {
          padding: 30px 20px;
          margin: 10px;
        }

        .header h1 {
          font-size: 2rem;
        }

        .checkbox-group {
          grid-template-columns: 1fr;
        }

        .form-input,
        .form-select,
        .submit-button {
          padding: 12px;
        }
      }

      @media (max-width: 480px) {
        .container {
          padding: 25px 15px;
        }

        .header h1 {
          font-size: 1.75rem;
        }

        .section-title {
          font-size: 1.1rem;
        }
      }

      /* Loading animation */
      .loading {
        opacity: 0.7;
        pointer-events: none;
      }

      .loading .submit-button {
        background: #9ca3af;
        cursor: not-allowed;
      }

      /* Success animation */
      .success-animation {
        animation: successPulse 0.6s ease-in-out;
      }

      @keyframes successPulse {
        0% {
          transform: scale(1);
        }
        50% {
          transform: scale(1.05);
        }
        100% {
          transform: scale(1);
        }
      }
    </style>
  </head>
  <body>
    <div class="container">
      <div class="header">
        <h1>Add New Class</h1>
        <p>Create a new class and assign subjects and teachers</p>
      </div>

      <% if (typeof msg !== 'undefined' && msg) { %>
      <div class="message error"><%= msg %></div>
      <% } %>

      <form
        action="/portal/admin/dashboard/classes/add"
        method="post"
        id="addClassForm"
      >
        <div class="form-section">
          <div class="section-title">
            <div class="section-icon">üìö</div>
            Class Information
          </div>
          <div class="form-group">
            <label class="form-label" for="className">Class Name</label>
            <input
              type="text"
              name="name"
              id="className"
              class="form-input"
              placeholder="Enter class name (e.g., Grade 10A, Mathematics Advanced)"
              required
            />
          </div>
        </div>

        <div class="form-divider"></div>

        <div class="form-section">
          <div class="section-title">
            <div class="section-icon">üìñ</div>
            Select Subjects
          </div>
          <% if (subjects.length > 0) { %>
          <div class="checkbox-group">
            <% subjects.forEach(subject => { %>
            <div class="checkbox-item">
              <input
                type="checkbox"
                name="subjects"
                id="<%= subject.title %>"
                value="<%= subject.title %>"
              />
              <label for="<%= subject.title %>"><%= subject.title %></label>
            </div>
            <% }) %>
          </div>
          <% } else { %>
          <div class="no-subjects">
            <p>
              No subjects available. Please add subjects first before creating a
              class.
            </p>
          </div>
          <% } %>
        </div>

        <div class="form-divider"></div>

        <div class="form-section">
          <div class="section-title">
            <div class="section-icon">üë®‚Äçüè´</div>
            Class Teacher Assignment
          </div>
          <div class="form-group">
            <label class="form-label" for="classTeacher"
              >Assign Class Teacher</label
            >
            <select
              name="classTeacher"
              id="classTeacher"
              class="form-select"
              required
            >
              <option value="" disabled selected>Select a teacher...</option>
              <% if (teachers.length > 0) { %> <% teachers.forEach(teacher => {
              %>
              <option value="<%= teacher._id %>"><%= teacher.name %></option>
              <% }) %> <% } else { %>
              <option value="" disabled>No teachers available</option>
              <% } %>
            </select>
          </div>
        </div>

        <input type="submit" value="Create Class" class="submit-button" />
      </form>
    </div>

    <script>
      // Form submission handling
      document
        .getElementById("addClassForm")
        .addEventListener("submit", function (e) {
          const container = document.querySelector(".container");
          container.classList.add("loading");

          // Reset loading state after a delay (remove this in production)
          setTimeout(() => {
            container.classList.remove("loading");
          }, 2000);
        });

      // Checkbox styling
      document
        .querySelectorAll('.checkbox-item input[type="checkbox"]')
        .forEach((checkbox) => {
          checkbox.addEventListener("change", function () {
            const item = this.closest(".checkbox-item");
            if (this.checked) {
              item.classList.add("checked");
            } else {
              item.classList.remove("checked");
            }
          });
        });

      // Click on checkbox item to toggle checkbox
      document.querySelectorAll(".checkbox-item").forEach((item) => {
        item.addEventListener("click", function (e) {
          if (e.target.type !== "checkbox") {
            const checkbox = this.querySelector('input[type="checkbox"]');
            checkbox.checked = !checkbox.checked;
            checkbox.dispatchEvent(new Event("change"));
          }
        });
      });

      // Form validation
      document
        .getElementById("addClassForm")
        .addEventListener("submit", function (e) {
          const classNameInput = document.getElementById("className");
          const teacherSelect = document.getElementById("classTeacher");
          const checkboxes = document.querySelectorAll(
            'input[name="subjects"]:checked'
          );

          // Check if class name is provided
          if (!classNameInput.value.trim()) {
            e.preventDefault();
            alert("Please enter a class name.");
            classNameInput.focus();
            return;
          }

          // Check if teacher is selected
          if (!teacherSelect.value) {
            e.preventDefault();
            alert("Please select a class teacher.");
            teacherSelect.focus();
            return;
          }

          // Check if at least one subject is selected
          if (checkboxes.length === 0) {
            e.preventDefault();
            alert("Please select at least one subject for the class.");
            return;
          }
        });

      // Input focus effects
      document
        .querySelectorAll(".form-input, .form-select")
        .forEach((input) => {
          input.addEventListener("focus", function () {
            this.parentElement.style.transform = "translateY(-2px)";
          });

          input.addEventListener("blur", function () {
            this.parentElement.style.transform = "translateY(0)";
          });
        });
    </script>
  </body>
</html>
